receivers:
  otlp:
    protocols:
      grpc:
        endpoint: ${env:OTEL_COLLECTOR_HOST}:${env:OTEL_COLLECTOR_PORT_GRPC}
      http:
        endpoint: ${env:OTEL_COLLECTOR_HOST}:${env:OTEL_COLLECTOR_PORT_HTTP}
  mongodb:
    hosts:
      - endpoint: ${env:MONGO_HOST}:${env:MONGO_PORT}
    collection_interval: 60s
    initial_delay: 1s
    tls:
      insecure: true
      insecure_skip_verify: true

processors:
  batch:

exporters:
  prometheus:
    endpoint: ${env:OTEL_COLLECTOR_HOST}:${env:OTEL_COLLECTOR_PORT_PROMETHEUS_EXPORTER}
#  otlp:
#    endpoint: tempo:4317
#    tls:
#      insecure: true

connectors:
  # spanmetrics docs:
  # https://github.com/open-telemetry/opentelemetry-collector-contrib/blob/main/connector/spanmetricsconnector/README.md
  spanmetrics:
    histogram:
      explicit:
        buckets: [ 100us, 1ms, 2ms, 6ms, 10ms, 100ms, 250ms ]
    dimensions:
      - name: http.method
      - name: http.status_code
      - name: http.route
    metrics_flush_interval: 15s
    metrics_expiration: 10m

service:
  pipelines:
    traces:
      receivers: [otlp]
      processors: [batch]
      exporters: [spanmetrics]
    metrics/spanmetrics:
      receivers: [spanmetrics]
      exporters: [prometheus]
    metrics:
      receivers: [ mongodb ]
      exporters: [ prometheus ]
